version: "3.9"

x-network: &network
  networks:
    - platform

x-deploy-on-front: &deploy-on-front
  deploy:
    replicas: 1
    placement:
      constraints:
        - node.hostname == ${HOSTNANME_01}

x-healthcheck-config: &healthcheck-config
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

services:

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=grafana
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_USERS_ALLOW_SIGN_UP=false
    <<: *deploy-on-front
    <<: *network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      <<: *healthcheck-config

  # portainer:
  #   image: portainer/portainer-ce:${PORTAINER_VERSION}
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - portainer-data:/data
  #   ports:
  #     # - ${PORTAINER_PORT}:9000
  #     - "9443:9443"
  #     - "9000:9000"
  #     - "8000:8000"
  #   <<: *network
  #   <<: *deploy-on-front
  #   command: -H tcp://tasks.agent:9001 --tlsskipverify
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9000"]
  #     <<: *healthcheck-config

  # portainer-agent:
  #   image: portainer/agent:2.26.1-alpine
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - /var/lib/docker/volumes:/var/lib/docker/volumes
  #   <<: *network
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints: [node.platform.os == linux]
      
volumes:
  grafana-data:
    driver: local
  # portainer-data:
  #   driver: local

networks:
  platform:
    external: true

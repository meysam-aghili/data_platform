version: "3.9"

networks:
  platform:
    external: true

x-network: &network
  networks:
    - platform

x-healthcheck-config: &healthcheck-config
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

x-deploy-on-front: &deploy-on-front
  deploy:
    replicas: 1
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_01}

x-deploy-on-host-01: &deploy-on-host-01
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_01}
x-deploy-on-host-02: &deploy-on-host-02
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_02}
x-deploy-on-host-03: &deploy-on-host-03
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_03}
        
##################################################################

services:

  prometheus:
    image: ${PROMETHEUS_IMAGE}
    ports:
      - ${PROMETHEUS_PORT}:9090
    volumes:
      - prometheus-data:/prometheus
    configs:
      - source: prometheus-config
        target: /etc/prometheus/prometheus.yml
      - source: prometheus-alert-rules
        target: /etc/prometheus/alert-rules.yml
    <<: [*network, *deploy-on-front]
    extra_hosts:
      - 'host-01:${HOSTIP_01}'
      - 'host-02:${HOSTIP_02}'
      - 'host-03:${HOSTIP_03}'
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      <<: *healthcheck-config

  alertmanager:
    image: ${ALERTMANAGER_IMAGE}
    ports:
      - ${ALERTMANAGER_PORT}:9093
    configs:
      - source: alertmanager-config
        target: /etc/alertmanager/alertmanager.yml
    <<: [*network, *deploy-on-front]
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9093/-/healthy"]
      <<: *healthcheck-config

  node-exporter:
    image: ${NODE_EXPORTER_IMAGE}
    deploy:
      mode: global
    ports:
      - ${NODE_EXPORTER_PORT}:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"    
      # - "^/(rootfs/)?(dev|etc|host|proc|run|sys|volume1)($$|/)"
    <<: *network

  cadvisor:
    image: ${CADVISOR_IMAGE}
    deploy:
      mode: global
    ports:
      - ${CADVISOR_PORT}:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    <<: *network

volumes:
  prometheus-data:
    driver: local
  portainer-data:
    driver: local

configs:
  alertmanager-config:
    file: ./config/alertmanager.yml
  prometheus-config:
    file: ./config/prometheus.yml
  prometheus-alert-rules:
    file: ./config/alert-rules.yml

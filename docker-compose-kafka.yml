version: "3.9"

x-network: &network
  networks:
    - platform

x-kafka-common: &kafka-common
  image: confluentinc/cp-kafka-prod:${CONFLUENT_VERSION}
  <<: *network

x-kafka-common-env: &kafka-common-env
  KAFKA_CONTROLLER_QUORUM_VOTERS: 1001@kafka-controller-01:29061,1002@kafka-controller-02:29062,1003@kafka-controller-03:29063
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
  CLUSTER_ID: YqLu9-0pSQ6QQCZqFsJlVg

x-kafka-controller-common: &kafka-controller-common
  <<: *kafka-common
  volumes:
    # - ./data/kafka-controller:/var/lib/kafka/data
    - ./kafka/kafka-controller-exporter.yml:/home/appuser/kafka-controller-exporter.yml
x-kafka-controller-envs: &kafka-controller-envs
  <<: *kafka-common-env
  KAFKA_PROCESS_ROLES: controller
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g'
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=26075:/home/appuser/kafka-controller-exporter.yml" 

x-kafka-broker-common: &kafka-broker-common
  <<: *kafka-common
  volumes:
    # - ./data/kafka-controller:/var/lib/kafka/data
    - ./kafka/kafka-broker-exporter.yml:/home/appuser/kafka-broker-exporter.yml
x-kafka-broker-envs: &kafka-broker-envs
  <<: *kafka-common-env
  KAFKA_HEAP_OPTS: '-Xms${KAFKA_BROKER_HEAP_GBS}g -Xmx${KAFKA_BROKER_HEAP_GBS}g'
  KAFKA_FETCH_MAX_BYTES: ${KAFKA_BROKER_MAX_MSG_BYTES}
  KAFKA_REPLICA_FETCH_MAX_BYTES: ${KAFKA_BROKER_MAX_MSG_BYTES}
  KAFKA_MESSAGE_MAX_BYTES: ${KAFKA_BROKER_MAX_MSG_BYTES}
  KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: ${KAFKA_BROKER_MAX_MSG_BYTES}
  KAFKA_PROCESS_ROLES: broker
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_INT:PLAINTEXT,PLAINTEXT_EXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INT
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=27075:/home/appuser/kafka-broker-exporter.yml"

x-kafka-connect-common: &kafka-connect-common
  image: confluentinc/cp-kafka-connect-prod:${CONFLUENT_VERSION}
  <<: *network
  volumes:
    - ./kafka_connect/kafka-connect-exporter.yml:/home/appuser/kafka-connect-exporter.yml
x-kafka-connect-envs: &kafka-connect-envs
  CONNECT_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
  CONNECT_REST_PORT: 8083
  CONNECT_GROUP_ID: kafka-connect
  CONNECT_CONFIG_STORAGE_TOPIC: _kafka_connect-configs
  CONNECT_STATUS_STORAGE_TOPIC: _kafka_connect-statuses
  CONNECT_OFFSET_STORAGE_TOPIC: _kafka_connect-offsets
  CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 3
  CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 3
  CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 3
  CONNECT_COMPRESSION_TYPE: lz4
  CONNECT_BATCH_SIZE: 65536 # 64kb
  CONNECT_LINGER_MS: 100
  CONNECT_ACKS: -1
  CONNECT_BUFFER_MEMORY: 268435456 # 4294967296 # 4gb
  CONNECT_MAX_REQUEST_SIZE: 67108864 # 64mb
  KAFKA_HEAP_OPTS: '-Xmx${KAFKA_CONNECT_HEAP_GBS}g -Xms${KAFKA_CONNECT_HEAP_GBS}g'
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=25075:/home/appuser/kafka-connect-exporter.yml" 

x-deploy-on-front: &deploy-on-front
  deploy:
    replicas: 1
    placement:
      constraints:
        - node.hostname == ${HOSTNANME_01}

services:

  kafka-controller-01:
    <<: *kafka-controller-common
    ports:
      - 29061:29061
      - 26075:26075
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1001
      KAFKA_LISTENERS: CONTROLLER://:29061
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_01}

  kafka-controller-02:
    <<: *kafka-controller-common
    ports:
      - 29062:29062
      - 26074:26075
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1002
      KAFKA_LISTENERS: CONTROLLER://:29062
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_02}

  kafka-controller-03:
    <<: *kafka-controller-common
    ports:
      - 29063:29063
      - 26073:26075
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1003
      KAFKA_LISTENERS: CONTROLLER://:29063
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_03}

  kafka-broker-01:
    <<: *kafka-broker-common
    ports:
      - 29091:29091
      - 27091:27091
      - 27071:27075
    environment:
      <<: *kafka-broker-envs
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27091,PLAINTEXT_EXT://0.0.0.0:29091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-broker-01:27091,PLAINTEXT_EXT://172.20.65.42:29091
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_01}

  kafka-broker-02:
    <<: *kafka-broker-common
    ports:
      - 29092:29092
      - 27092:27092
      - 27072:27075
    environment:
      <<: *kafka-broker-envs
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27092,PLAINTEXT_EXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-broker-02:27092,PLAINTEXT_EXT://172.20.65.42:29092
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_02}

  kafka-broker-03:
    <<: *kafka-broker-common
    ports:
      - 29093:29093
      - 27093:27093
      - 27073:27075
    environment:
      <<: *kafka-broker-envs
      KAFKA_NODE_ID: 3
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27093,PLAINTEXT_EXT://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-broker-03:27093,PLAINTEXT_EXT://172.20.65.42:29093
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_03}

  kafka-connect-01:
    <<: *kafka-connect-common
    hostname: kafka-connect-01
    ports:
      - 8083:8083
      - 9982:8083
      - 25071:25075
    environment:
      <<: *kafka-connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-01
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_01}

  kafka-connect-02:
    <<: *kafka-connect-common
    hostname: kafka-connect-02
    ports:
      - 25072:25075
    environment:
      <<: *kafka-connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-02
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_02}

  kafka-connect-03:
    <<: *kafka-connect-common
    hostname: kafka-connect-03
    ports:
      - 25073:25075
    environment:
      <<: *kafka-connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect-03
    deploy:
      placement:
        constraints:
          - node.hostname == ${HOSTNANME_03}

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - 8081:8081
      - 9991:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - 8082:8082
      - 9992:8082
    environment:
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'

  kafka-ui:
    image: provectuslabs/kafka-ui:${KAFKA_UI_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - ${KAFKA_UI_PORT}:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: lab
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: lab
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: "http://kafka-connect-01:8083"
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://kafka-schema-registry:8081"

  kafka-schema-registry-ui:
    image: landoop/schema-registry-ui:${KAFKA_SCHEMA_REGISTRY_UI_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - ${KAFKA_SCHEMA_REGISTRY_UI_PORT}:8000
    environment:
      SCHEMAREGISTRY_URL: http://kafka-schema-registry:8081
      PROXY: "true"
  
  kafka-connect-ui:
    image: landoop/kafka-connect-ui:${KAFKA_CONNECT_UI_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - ${KAFKA_CONNECT_UI_PORT}:8000
    environment:
      CONNECT_URL: http://kafka-connect-01:8083
      PROXY: "true"

# volumes:
#   kafka-broker-data:
#     driver: local
#   kafka-controller-data:
#     driver: local

networks:
  platform:
    external: true

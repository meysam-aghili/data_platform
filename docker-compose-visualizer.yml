version: "3.9"

networks:
  platform:
    external: true

x-network: &network
  networks:
    - platform

x-healthcheck-config: &healthcheck-config
  interval: 30s
  timeout: 10s
  retries: 3
  start_period: 40s

x-deploy-on-front: &deploy-on-front
  deploy:
    replicas: 1
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_01}

x-deploy-on-host-01: &deploy-on-host-01
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_01}
x-deploy-on-host-02: &deploy-on-host-02
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_02}
x-deploy-on-host-03: &deploy-on-host-03
  deploy:
    placement:
      constraints:
        - node.hostname == ${HOSTNAME_03}
        
##################################################################

services:

  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    ports:
      - ${GRAFANA_PORT}:3000
    volumes:
      # - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/plugins:/var/lib/grafana/plugins
      - ./grafana/dashboard-provider.yaml:/etc/grafana/provisioning/dashboards/default.yaml
      - ./grafana/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
        GF_SECURITY_ADMIN_USER: grafana
        GF_SECURITY_ADMIN_PASSWORD: grafana
        GF_USERS_ALLOW_SIGN_UP: 'false'
        GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: grafana-clickhouse-datasource
    <<: *deploy-on-front
    <<: *network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1"]
      <<: *healthcheck-config

  metabase:
    image: metabase/metabase:${METABASE_VERSION}
    ports:
      - ${METABASE_PORT}:3000
    volumes:
      - ./metabase/plugins:/plugins
    <<: *deploy-on-front
    <<: *network
    # healthcheck:
    #   test: curl --fail -X GET -I http://localhost:3000/api/health || exit 1

  # kibana:
  #   image: kibana:${KIBANA_VERSION}
  #   ports:
  #     - ${KIBANA_PORT}:5601
  #   entrypoint: |
  #     sh -c "
  #     export ELASTIC_PASSWORD=$$(cat /run/secrets/elasticsearch_password) &&
  #     /bin/tini -- /usr/local/bin/kibana-docker --elasticsearch.password=$$ELASTIC_PASSWORD --elasticsearch.username=elastic --elasticsearch.hosts=http://elasticsearch:${ELASTICSEARCH_PORT} --host=0.0.0.0
  #     "
  #   secrets:
  #     - elasticsearch_password
  #   <<: *network
  #   <<: *deploy-on-front
    
secrets:
  postgres_password:
    external: true
  # elasticsearch_password:
  #   external: true

# volumes:
#   grafana-data:
#     driver: local

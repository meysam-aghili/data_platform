using System.Net;
using WebApi.Models;


namespace WebApi.Shared;

public static class LogHelper
{
    public static (string message, object[] parameters) GetLog(HttpContext context, long elapsedMillis, Dictionary<string, object>? payload = null)
    {
        string message =
            "Generated By Middleware: {biapi} - "
            + "Status Code: {status} - "
            + "Method: {method} - "
            + "Endpoint: {endpoint} - "
            + "Query String: {query} - "
            // + "Payload: {payload} - "
            + "Requester: {user} - "
            + "Trace ID: {traceId} - "
            + "Execution time: {elapsed}";
        object[] parameters = [
            true,
            context.Response.StatusCode.ToString(),
            context.Request.Method,
            context.Request.Path,
            context.Request.QueryString,
            // JsonSerializer.Serialize(payload),
            context.User.Identity?.Name ?? string.Empty,
            context.TraceIdentifier,
            elapsedMillis.ToString()
        ];
        return (message, parameters);
    }

    public static void LogRequest(ILogger logger, HttpContext context, long elapsedMillis, ErrorModel? error = null)
    {
        var (logMessage, logParams) = GetLog(context, elapsedMillis, null);
        var logLevel = error == null ? LogLevel.Information : LogLevel.Error;
        logger.Log(logLevel: logLevel, message: logMessage, args: logParams, exception: error?.Exception);
    }
}

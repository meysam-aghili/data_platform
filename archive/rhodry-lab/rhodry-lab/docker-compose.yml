version: '3.7'

x-network: &network
  # <<: *hosts
  networks:
    - rhodry

x-deploy-on-front: &deploy-on-front
  deploy:
    replicas: 1
    placement:
      constraints:
        - node.hostname == rhodrylab-01

# x-zookeeper-envs: &zookeeper-envs
#   # ZOO_TICK_TIME: 2000
#   # ZOO_SERVERS: server.1=zookeeper-01:12888:13888;12181
#   ZOOKEEPER_CLIENT_PORT: 2181

x-kafka-envs: &kafka-envs
  # KAFKA_ZOOKEEPER_CONNECT: zookeeper-01:2181/kafka
  # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 5
  KAFKA_HEAP_OPTS: '-Xms${KAFKA_HEAP_GBS}g -Xmx${KAFKA_HEAP_GBS}g'
  KAFKA_FETCH_MAX_BYTES: ${MAX_MSG_BYTES}
  KAFKA_REPLICA_FETCH_MAX_BYTES: ${MAX_MSG_BYTES}
  KAFKA_MESSAGE_MAX_BYTES: ${MAX_MSG_BYTES}
  KAFKA_REPLICA_FETCH_RESPONSE_MAX_BYTES: ${MAX_MSG_BYTES}
  # KAFKA_INTER_BROKER_PROTOCOL_VERSION: 3.6  
  # KAFKA_ZOOKEEPER_METADATA_MIGRATION_ENABLE: 'true'
  KAFKA_PROCESS_ROLES: broker
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_INT:PLAINTEXT,PLAINTEXT_EXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  KAFKA_CONTROLLER_QUORUM_VOTERS: 1001@kafka-controller-01:29061,1002@kafka-controller-02:29062,1003@kafka-controller-03:29063,1004@kafka-controller-04:29064,1005@kafka-controller-05:29065
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  CLUSTER_ID: YqLu9-0pSQ6QQCZqFsJlVg
  KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INT
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=27075:/home/appuser/kafka-exporter.yml" 


x-kafka-controller-envs: &kafka-controller-envs
  # KAFKA_ZOOKEEPER_METADATA_MIGRATION_ENABLE: 'true'
  KAFKA_PROCESS_ROLES: controller
  KAFKA_CONTROLLER_QUORUM_VOTERS: 1001@kafka-controller-01:29061,1002@kafka-controller-02:29062,1003@kafka-controller-03:29063,1004@kafka-controller-04:29064,1005@kafka-controller-05:29065
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  # KAFKA_ZOOKEEPER_CONNECT: zookeeper-01:2181/kafka
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 5
  KAFKA_HEAP_OPTS: '-Xms1g -Xmx1g'
  CLUSTER_ID: YqLu9-0pSQ6QQCZqFsJlVg
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=26075:/home/appuser/controller-exporter.yml" 

  # KAFKA_INTER_BROKER_PROTOCOL_VERSION: 3.6
  # KAFKA_NODE_ID: 1001
  # KAFKA_LISTENERS: CONTROLLER://29061

# x-zookeeper-common: &zookeeper-common
#   image: ${CI_REGISTRY_IMAGE}/confluentinc/cp-zookeeper:${CONFLUENT_VERSION}
#   <<: *network
#   volumes:
#     - /data/zookeeper/data:/var/lib/zookeeper/data
#     - /data/zookeeper/datalog:/var/lib/zookeeper/log

x-kafka-common: &kafka-common
  image: ${CI_REGISTRY_IMAGE}/kafka:${CONFLUENT_VERSION}
  <<: *network
  volumes:
    - /data/kafka:/var/lib/kafka/data
  configs:
    - source: kafka-exporter
      target: /home/appuser/kafka-exporter.yml

x-kafka-controller-common: &kafka-controller-common
  image: ${CI_REGISTRY_IMAGE}/kafka:${CONFLUENT_VERSION}
  <<: *network
  volumes:
    - /data/kafka-controller:/var/lib/kafka/data
  configs:
    - source: controller-exporter
      target: /home/appuser/controller-exporter.yml

x-connect-envs: &connect-envs
  CONNECT_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
  CONNECT_REST_PORT: 8083
  CONNECT_GROUP_ID: connect
  CONNECT_CONFIG_STORAGE_TOPIC: _rhodry_connect-configs
  CONNECT_STATUS_STORAGE_TOPIC: _rhodry_connect-statuses
  CONNECT_OFFSET_STORAGE_TOPIC: _rhodry_connect-offsets
  CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
  CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
  CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 5
  CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 5
  CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 5
  CONNECT_COMPRESSION_TYPE: lz4
  CONNECT_BATCH_SIZE: 65536 # 64kb
  CONNECT_LINGER_MS: 100
  CONNECT_ACKS: -1
  CONNECT_BUFFER_MEMORY: 4294967296 # 4gb
  CONNECT_MAX_REQUEST_SIZE: 67108864 # 64mb
  KAFKA_HEAP_OPTS: '-Xmx${CONNECT_HEAP_GBS}g -Xms${CONNECT_HEAP_GBS}g'
  KAFKA_OPTS: "-javaagent:/home/appuser/jmx_prometheus_javaagent-1.0.0.jar=25075:/home/appuser/connect-exporter.yml" 

x-kafka-connect-common: &kafka-connect-common
  image: ${CI_REGISTRY_IMAGE}/connect:${RHODRY_CONNECT_VERSION}
  <<: *network
  configs:
    - source: connect-exporter
      target: /home/appuser/connect-exporter.yml

x-ksqldb-envs: &ksqldb-envs
  KSQL_KSQL_SERVICE_ID: ksqldb
  KSQL_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
  KSQL_KSQL_SINK_REPLICAS: 3
  KSQL_KSQL_STREAMS_REPLICATION_FACTOR: 1
  KSQL_KSQL_INTERNAL_TOPIC_REPLICAS: 3
  KSQL_KSQL_STREAMS_STATE_DIR: /data/ksqldb/
  KSQL_KSQL_STREAMS_AUTO_OFFSET_RESET: latest
  KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
  KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"
  KSQL_KSQL_SCHEMA_REGISTRY_URL: http://schema-registry:8081
  KSQL_KSQL_CONNECT_URL: http://connect-01:8083

x-ksqldb-vols: &ksqldb-vols
  volumes:
    - /data/ksqldb/:/data/ksqldb/

services:
  # zookeeper-01:
  #   <<: *zookeeper-common
  #   <<: *deploy-on-front
  #   ports:
  #     - 2181:2181
  #   environment:
  #     <<: *zookeeper-envs
  #     ZOO_MY_ID: 1

  kafka-controller-01:
    <<: *kafka-controller-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-01
    ports:
      - 29061:29061
      - 26071:26075
    # <<: *hosts
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1001
      # KAFKA_ADVERTISED_LISTENERS: CONTROLLER://kafka-controller-01:29061
      KAFKA_LISTENERS: CONTROLLER://:29061

  kafka-controller-02:
    <<: *kafka-controller-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-02
    ports:
      - 29062:29062
      - 26072:26075
    # <<: *hosts
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1002
      # KAFKA_ADVERTISED_LISTENERS: CONTROLLER://kafka-controller-02:29062
      KAFKA_LISTENERS: CONTROLLER://:29062

  kafka-controller-03:
    <<: *kafka-controller-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-03
    ports:
      - 29063:29063
      - 26073:26075
    # <<: *hosts
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1003
      # KAFKA_ADVERTISED_LISTENERS: CONTROLLER://kafka-controller-03:29063
      KAFKA_LISTENERS: CONTROLLER://:29063

  kafka-controller-04:
    <<: *kafka-controller-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-04
    ports:
      - 29064:29064
      - 26074:26075
    # <<: *hosts
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1004
      # KAFKA_ADVERTISED_LISTENERS: CONTROLLER://kafka-controller-04:29064
      KAFKA_LISTENERS: CONTROLLER://:29064

  kafka-controller-05:
    <<: *kafka-controller-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-05
    ports:
      - 29065:29065
      - 26075:26075
    # <<: *hosts
    environment:
      <<: *kafka-controller-envs
      KAFKA_NODE_ID: 1005
      # KAFKA_ADVERTISED_LISTENERS: CONTROLLER://kafka-controller-05:29065
      KAFKA_LISTENERS: CONTROLLER://:29065

  kafka-01:
    <<: *kafka-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-01
    ports:
      - 29091:29091
      - 27091:27091
      - 27071:27075
    environment:
      <<: *kafka-envs
      # KAFKA_BROKER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27091,PLAINTEXT_EXT://0.0.0.0:29091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-01:27091,PLAINTEXT_EXT://172.17.23.146:29091

  kafka-02:
    <<: *kafka-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-02
    ports:
      - 29092:29092
      - 27092:27092
      - 27072:27075
    environment:
      <<: *kafka-envs
      # KAFKA_BROKER_ID: 2
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27092,PLAINTEXT_EXT://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-02:27092,PLAINTEXT_EXT://172.17.23.147:29092

  kafka-03:
    <<: *kafka-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-03
    ports:
      - 29093:29093
      - 27093:27093
      - 27073:27075
    environment:
      <<: *kafka-envs
      # KAFKA_BROKER_ID: 3
      KAFKA_NODE_ID: 3
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27093,PLAINTEXT_EXT://0.0.0.0:29093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-03:27093,PLAINTEXT_EXT://172.17.23.148:29093

  kafka-04:
    <<: *kafka-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-04
    ports:
      - 29094:29094
      - 27094:27094
      - 27074:27075
    environment:
      <<: *kafka-envs
      # KAFKA_BROKER_ID: 4
      KAFKA_NODE_ID: 4
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27094,PLAINTEXT_EXT://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-04:27094,PLAINTEXT_EXT://172.17.23.149:29094

  kafka-05:
    <<: *kafka-common
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-05
    ports:
      - 29095:29095
      - 27095:27095
      - 27075:27075
    environment:
      <<: *kafka-envs
      # KAFKA_BROKER_ID: 5
      KAFKA_NODE_ID: 5
      KAFKA_LISTENERS: PLAINTEXT_INT://0.0.0.0:27095,PLAINTEXT_EXT://0.0.0.0:29095
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_INT://kafka-05:27095,PLAINTEXT_EXT://172.17.23.150:29095

  connect-01:
    <<: *kafka-connect-common
    hostname: connect-01
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-01
    ports:
      - ${CONNECT_REST_PORT}:8083
      - 9982:8083
      - 25071:25075
      - 8083:8083
    environment:
      <<: *connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-01

  connect-02:
    <<: *kafka-connect-common
    hostname: connect-02
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-02
    ports:
      - 25072:25075
    environment:
      <<: *connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-02

  connect-03:
    <<: *kafka-connect-common
    hostname: connect-03
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-03
    ports:
      - 25073:25075          
    environment:
      <<: *connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-03

  connect-04:
    <<: *kafka-connect-common
    hostname: connect-04
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-04
    ports:
      - 25074:25075           
    environment:
      <<: *connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-04

  connect-05:
    <<: *kafka-connect-common
    hostname: connect-05
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-05
    ports:
      - 25075:25075            
    environment:
      <<: *connect-envs
      CONNECT_REST_ADVERTISED_HOST_NAME: connect-05

  schema-registry:
    image: ${CI_REGISTRY_IMAGE}/confluentinc/cp-schema-registry:${CONFLUENT_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - 8081:8081
      - 9991:8081
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_SCHEMA_REGISTRY_INTER_INSTANCE_PROTOCOL: http

  rest-proxy:
    image: ${CI_REGISTRY_IMAGE}/confluentinc/cp-kafka-rest:${CONFLUENT_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - ${KAFKA_REST_PORT}:8082
      - 9992:8082
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: ${BOOTSTRAP_SERVERS}
      KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

  ksqldb-01:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    hostname: ksqldb-01
    <<: *network
    <<: *ksqldb-vols
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-01
    ports:
      - 9980:8088
      - ${KSQLDB_PORT}:8088
      - 8088:8088
    environment:
      <<: *ksqldb-envs
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_KSQL_ADVERTISED_LISTENER: http://ksqldb-01:8088

  ksqldb-02:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    hostname: ksqldb-02
    <<: *network
    <<: *ksqldb-vols
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-02
    environment:
      <<: *ksqldb-envs
      KSQL_LISTENERS: http://ksqldb-02:8088

  ksqldb-03:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    hostname: ksqldb-03
    <<: *network
    <<: *ksqldb-vols
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-03
    environment:
      <<: *ksqldb-envs
      KSQL_LISTENERS: http://ksqldb-03:8088

  ksqldb-04:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    hostname: ksqldb-04
    <<: *network
    <<: *ksqldb-vols
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-04
    environment:
      <<: *ksqldb-envs
      KSQL_LISTENERS: http://ksqldb-04:8088

  ksqldb-05:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    hostname: ksqldb-05
    <<: *network
    <<: *ksqldb-vols
    deploy:
      placement:
        constraints:
          - node.hostname == rhodrylab-05
    environment:
      <<: *ksqldb-envs
      KSQL_LISTENERS: http://ksqldb-05:8088

  rhodry:
    image: ${CI_REGISTRY_IMAGE}:${RHODRY_VERISON}
    <<: *deploy-on-front
    <<: *network
    ports:
      - ${RHODRY_PORT}:80
    environment:
      CLUSTER: ${RHODRY_CLUSTER}
      RHODRY_SERVER: ${RHODRY_SERVER}
      RHODRY_DB: ${RHODRY_DB}
      # BILOG_SERVER: ${BILOG_SERVER}
      # BILOG_DBS: ${BILOG_DBS}
    secrets:
      - source: SN_SLAVE_USER
        target: SUPERNOVA_USER
      - source: SN_PASS
        target: SUPERNOVA_PASS
      # - SN_MASTER_USER
      # - SN_SLAVE_USER
      # - SN_PASS
      - RHODRY_USER
      - RHODRY_PASS

  ksqldb-cli:
    image: ${CI_REGISTRY_IMAGE}/ksqldb:${KSQLDB_VERSION}
    <<: *network
    <<: *deploy-on-front
    command: [ "ksql", "http://ksqldb-01:8088" ]
    stdin_open: true
    tty: true

  kafka-cli:
    image: ${CI_REGISTRY_IMAGE}/landoop/fast-data-dev
    <<: *network
    <<: *deploy-on-front
    command: [ "bash" ]
    stdin_open: true
    tty: true

  topics-ui:
    image: ${CI_REGISTRY_IMAGE}/landoop/topics-ui
    <<: *network
    <<: *deploy-on-front
    environment:
      KAFKA_REST_PROXY_URL: http://rest-proxy:8082
      PROXY: "true"
    ports:
      - ${TOPICS_UI_PORT}:8000

  schema-registry-ui:
    image: ${CI_REGISTRY_IMAGE}/landoop/schema-registry-ui
    <<: *network
    <<: *deploy-on-front
    environment:
      SCHEMAREGISTRY_URL: http://schema-registry:8081
      PROXY: "true"
    ports:
      - ${SCHEMA_REGISTRY_UI_PORT}:8000
      - 9985:8000
  
  connect-ui:
    image: ${CI_REGISTRY_IMAGE}/landoop/connect-ui
    <<: *network
    <<: *deploy-on-front
    environment:
      CONNECT_URL: http://connect-01:8083
      PROXY: "true"
    ports:
      - ${CONNECT_UI_PORT}:8000

  kafdrop:
    image: ${CI_REGISTRY_IMAGE}/kafdrop
    <<: *deploy-on-front
    <<: *network
    environment:
      KAFKA_BROKERCONNECT: ${BOOTSTRAP_SERVERS}
      SERVER_SERVLET_CONTEXTPATH: '/'
      JVM_OPTS: '-Xms1g -Xmx1g'
      SERVER_PORT: 9000
      MANAGEMENT_SERVER_PORT: 9000
      SCHEMAREGISTRY_CONNECT: 'http://schema-registry:8081'
    ports:
      - ${KAFDROP_PORT}:9000
      - 9981:9000

  kafka-ui:
    image: ${CI_REGISTRY_IMAGE}/kafka-ui:${KAFKA_UI_VERSION}
    <<: *network
    <<: *deploy-on-front
    ports:
      - ${KAFKA_UI_PORT}:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: lab
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${BOOTSTRAP_SERVERS}
      KAFKA_CLUSTERS_0_METRICS_PORT: 9997
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: lab
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: "http://connect-01:8083"
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: "http://schema-registry:8081"
      KAFKA_CLUSTERS_0_KSQLDBSERVER: "http://ksqldb-01:8088"

networks:
  rhodry:
    attachable: true

configs:
  kafka-exporter:
    file: ./rhodry-kafka/kafka-exporter.yml
    name: "kafka-exporter-2024-07-08-v2"

  controller-exporter:
    file: ./rhodry-kafka/controller-exporter.yml
    name: "controller-exporter-2024-07-08-v2"

  connect-exporter:
    file: ./rhodry-connect/connect-exporter.yml
    name: "connect-exporter-2024-07-08"

secrets:
  SN_SLAVE_USER:
    external: true
  SN_PASS:
    external: true
  RHODRY_USER:
    external: true
  RHODRY_PASS:
    external: true
